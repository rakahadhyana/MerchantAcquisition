<Activity mc:Ignorable="sap sap2010" x:Class="ReadDataOutlet" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="attachmentPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>707,2370</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReadDataOutlet_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="42">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReadDataOutlet" sap:VirtualizedContainerService.HintSize="717,2165" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="outletDataList">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="New List(Of Dictionary(Of String, String))" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="675,1974" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="attachments\Input Merchant Acquisition (1).xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="641,1865" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="columsOutletData">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{&quot;B&quot;, &quot;E&quot;, &quot;H&quot;}" />
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="599,1773" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[columsOutletData]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="563,1640" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="outletData">
                        <Variable.Default>
                          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="New Dictionary(Of String, String)" />
                        </Variable.Default>
                      </Variable>
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadCell Cell="[column + &quot;24&quot;]" DisplayName="Read Nama Outlet" sap:VirtualizedContainerService.HintSize="521,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Versi 1">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[outletData("Nama Outlet")]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadCell>
                    <If Condition="[outletData(&quot;Nama Outlet&quot;) &lt;&gt; &quot;&quot;]" DisplayName="Check Outlet Name Not Blank" sap:VirtualizedContainerService.HintSize="521,1449" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence DisplayName="Read Remaining Cells" sap:VirtualizedContainerService.HintSize="376,1302" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelReadCell Cell="[column + &quot;25&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Nama PIC")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[column + &quot;26&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("No. Telepon PIC")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[column + &quot;27&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("No Rekening")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;28&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Nama Gedung / Ruko / Komplek")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;29&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_6" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Nama Jalan")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;30&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_7" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("No")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;31&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_8" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Kelurahan")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;32&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_9" PreserveFormat="True" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Kode Pos")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;33&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("RT/RW atau Blok")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;34&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" PreserveFormat="True" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Kecamatan")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;35&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" PreserveFormat="True" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Kota")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <ui:ExcelReadCell Cell="[column + &quot;36&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="Versi 1">
                            <ui:ExcelReadCell.Result>
                              <OutArgument x:TypeArguments="x:String">[outletData("Telepon")]</OutArgument>
                            </ui:ExcelReadCell.Result>
                          </ui:ExcelReadCell>
                          <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[outletDataList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[outletData]" />
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="675,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[outletDataList(1)(&quot;Nama Outlet&quot;)]" />
  </Sequence>
</Activity>