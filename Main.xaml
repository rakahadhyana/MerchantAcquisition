<Activity mc:Ignorable="sap sap2010" x:Class="New_Flowchart" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="848,884" sap2010:WorkflowViewState.IdRef="New_Flowchart_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="Merchant Acquistion Flow" sap:VirtualizedContainerService.HintSize="788,719" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="data_merchant" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="data_sales_channel" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="data_owner" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="data_documents" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="data_request" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="data_recommendation" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="data_outlet" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_mapf" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_mapo" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_review" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_hierarchy_info" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_masa" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_madr" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_mamr" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="asccend_settlement" />
      <Variable x:TypeArguments="x:String" Name="attachment_path">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">attachments/Input Merchant Acquisition Testing.xlsx</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="images_path" />
      <Variable x:TypeArguments="x:String" Name="automation_condition" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">100,87.5 100,117 50,117 50,-3 320,-3 320,117</av:PointCollection>
        <x:Double x:Key="Width">753.5</x:Double>
        <x:Double x:Key="Height">683</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">220,117</av:Point>
          <av:Size x:Key="ShapeSize">200,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">320,185 320,209.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Read Excel and Assign into Variable" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadSalesChannel workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ReadSalesChannel.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="R_saleschannel">[data_sales_channel]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadMerchantData workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ReadMerchantData.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="R_datamerchant">[data_merchant]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadDataOwner workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="ReadDataOwner.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="R_data_owner">[data_owner]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadDocuments workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ReadDocuments.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="R_documents">[data_documents]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadRequestData workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="ReadRequestData.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="RequestData">[data_request]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadRecommendation workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="ReadRecommendation.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_recommendation">[data_recommendation]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadDataOutlet workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="ReadDataOutlet.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</InArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_data_outlet">[data_outlet]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadAsccend workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="ReadAsccend.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asccend_mapf">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_mapf" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asccend_mapo">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_mapo" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asscend_review">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_review" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asscend_hierarchy_info">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_hierarchy_info" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asscend_masa">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_masa" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asscend_madr">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_madr" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asscend_mamr">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_mamr" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="R_asscend_settlement">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" ExpressionText="asccend_settlement" />
            </OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="attachmentPath">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="attachment_path" />
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="R_automation_condition">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="automation_condition" />
            </OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">205,209.5</av:Point>
              <av:Size x:Key="ShapeSize">230,62</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">320,271.5 310,271.5 310,296.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;test&quot; + automation_condition]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </WriteLine>
          <FlowStep.Next>
            <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID3" DisplayName="Flow Switch" Expression="[automation_condition]" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">275,296.5</av:Point>
                  <av:Size x:Key="ShapeSize">70,87</av:Size>
                  <av:PointCollection x:Key="Only MMSConnector">310,383.5 310,413.5 100,413.5 100,464.5</av:PointCollection>
                  <av:PointCollection x:Key="Only AsccendConnector">310,383.5 310,413.5 330,413.5 330,546</av:PointCollection>
                  <av:PointCollection x:Key="Both MMS and AsccendConnector">310,383.5 310,413.5 570,413.5 570,444.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowStep x:Key="Both MMS and Asccend" x:Name="__ReferenceID5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">470,444.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,52</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">570,495.5 570,524.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Login_MMS workflow" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Login_MMS.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">470,524.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">570,576.5 570,596</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Input_MMS workflow" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Input_MMS.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_sales_channel">[data_sales_channel]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_owner">[data_owner]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_merchant">[data_merchant]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_documents">[data_documents]</InArgument>
                        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="data_recommendation">[data_recommendation]</InArgument>
                        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="data_outlet">[data_outlet]</InArgument>
                        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="data_request">[data_request]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">470,596</av:Point>
                            <av:Size x:Key="ShapeSize">200,68</av:Size>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Input Asccend" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="countOutlet" />
                            <Variable x:TypeArguments="x:Int32" Name="index" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap:VirtualizedContainerService.HintSize="563,694" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Boolean" Name="asccendExist" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:UiElementExists DisplayName="Element Exists - Asccend" Exists="[asccendExist]" sap:VirtualizedContainerService.HintSize="521,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                              <ui:UiElementExists.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4eec8574-6f96-47f6-bcb9-3b5d46f7d2fa" InformativeScreenshot="4750dd72c9840b69c4e2652da49dc7f8" Selector="&lt;wnd app='explorer.exe' cls='Shell_TrayWnd' idx='*' /&gt;&lt;wnd cls='MSTaskSwWClass' title='Running applications' /&gt;&lt;wnd cls='MSTaskListWClass' title='Running applications' /&gt;&lt;ctrl name='Running applications' role='tool bar' /&gt;&lt;ctrl automationid='{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\IBM\Client Access\Emulato*' idx='2' name='PCSWS.EXE - 1 running window' role='push button' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:UiElementExists.Target>
                            </ui:UiElementExists>
                            <If Condition="[asccendExist]" sap:VirtualizedContainerService.HintSize="521,456" sap2010:WorkflowViewState.IdRef="If_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:CloseApplication DisplayName="Close Application - Asscend" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="CloseApplication_3">
                                    <ui:CloseApplication.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e8e255f7-cef1-440f-bbd8-bce97bba71ea" InformativeScreenshot="8866312b54b7ce21c28f32d75568ce3a" Selector="&lt;wnd app='pcsws.exe' cls='PCSWS:Main*' title='Session A - [24 x 80]' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:CloseApplication.Target>
                                  </ui:CloseApplication>
                                  <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                                    <ui:UiElementExists.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d277dcfb-2847-43b5-a0b8-8ad8c73f987a">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:UiElementExists.Target>
                                  </ui:UiElementExists>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                          <ui:OpenApplication ApplicationWindow="{x:Null}" Arguments="{x:Null}" TimeoutMS="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open Application - Asccend" FileName="C:\Program Files (x86)\IBM\Client Access\Emulator\pcsws.exe" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="OpenApplication_3" InformativeScreenshot="dd564c45d1b1bf89a2dd633b81b05a69" Selector="&lt;wnd app='pcsws.exe' cls='PCSWS:Main*' title='Session A - [24 x 80]' /&gt;">
                            <ui:OpenApplication.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="669,2100" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="627,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d836a5d3-1a68-4726-893f-a62bd4b82803" InformativeScreenshot="ff3dde7fde4a3eff138e3a82d185e9ac" Selector="&lt;wnd app='pcsws.exe' cls='#32770' title='Configure PC5250' /&gt;&lt;wnd ctrlid='1' title='OK' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:Click.Target>
                                  </ui:Click>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="627,1862" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="585,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Asccend_OpenAsccend.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Assign sap:VirtualizedContainerService.HintSize="585,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[countOutlet]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="585,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="585,378" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[data_outlet]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:Object">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,244" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[not data_outlet(index)(&quot;Nama Outlet&quot;).Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="If_7">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[countOutlet]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[countOutlet+1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                            </If>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                    <Assign sap:VirtualizedContainerService.HintSize="585,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="585,476" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
                                      <ui:InterruptibleWhile.Body>
                                        <Sequence sap:VirtualizedContainerService.HintSize="549,309" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[data_request(index)(&quot;jenis_edc&quot;)&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="507,217" sap2010:WorkflowViewState.IdRef="If_8">
                                            <If.Then>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Asccend_InputMAPF.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_documents">[data_documents]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_merchant">[data_merchant]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_outlet">[data_outlet(index)]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Asccend_InputMADR.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_madr">[asccend_madr(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_request">[data_request(index)]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Asccend_InputMAPO.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapo">[asccend_mapo(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_madr">[asccend_madr(index)]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Asccend_InputMAMR.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mamr">[asccend_mamr(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_merchant">[data_merchant]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_owner">[data_owner]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_hierarchy_info">[asccend_hierarchy_info(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_review">[asccend_review(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapo">[asccend_mapo(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_outlet">[data_outlet(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_request">[data_request(index)]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Asccend_InputMASA.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mamr">[asccend_mamr(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_masa">[asccend_masa(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_settlement">[asccend_settlement(index)]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Asccend_InputMACT.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mamr">[asccend_mamr(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_outlet">[data_outlet(index)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_owner">[data_owner]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ui:InterruptibleWhile.Body>
                                      <ui:InterruptibleWhile.Condition>
                                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="index&lt;countOutlet" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                                      </ui:InterruptibleWhile.Condition>
                                    </ui:InterruptibleWhile>
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey - F3" sap:VirtualizedContainerService.HintSize="585,117" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="f3" KeyModifiers="None" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="426706a6-db48-4008-9e2f-2c275da06296">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:SendHotkey>
                                    <ui:CloseApplication DisplayName="Close Application - Asccend" sap:VirtualizedContainerService.HintSize="585,106" sap2010:WorkflowViewState.IdRef="CloseApplication_4">
                                      <ui:CloseApplication.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7227e79d-61db-4605-aad7-378a69b7f28d" InformativeScreenshot="ee7289272a0e275658c8ea6cbd286545" Selector="&lt;wnd cls='PCSWS:Pres*' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:CloseApplication.Target>
                                    </ui:CloseApplication>
                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - No" sap:VirtualizedContainerService.HintSize="585,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="75216272-497b-4547-a50b-5d125af95545" InformativeScreenshot="31d4d77881d0bccb7d0e20a3d1b1e1ef" Selector="&lt;wnd app='pcsws.exe' cls='#32770' title='PC5250' /&gt;&lt;wnd ctrlid='1832' title='&amp;amp;No' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                  </Sequence>
                                </Sequence>
                              </ActivityAction>
                            </ui:OpenApplication.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:OpenApplication>
                        </Sequence>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
              <FlowStep x:Key="Only MMS" x:Name="__ReferenceID0">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">0,464.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,52</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">100,515.5 100,544.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Login_MMS workflow" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Login_MMS.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">0,544.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,52</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Input_MMS workflow" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Input_MMS.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_sales_channel">[data_sales_channel]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_owner">[data_owner]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_merchant">[data_merchant]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="data_documents">[data_documents]</InArgument>
                        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="data_recommendation">[data_recommendation]</InArgument>
                        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="data_outlet">[data_outlet]</InArgument>
                        <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="data_request">[data_request]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
              <FlowStep x:Key="Only Asccend" x:Name="__ReferenceID6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">230,546</av:Point>
                    <av:Size x:Key="ShapeSize">200,68</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Input Asccend" sap:VirtualizedContainerService.HintSize="921,3146" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="countOutlet" />
                    <Variable x:TypeArguments="x:Int32" Name="index" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence sap:VirtualizedContainerService.HintSize="879,68" sap2010:WorkflowViewState.IdRef="Sequence_20">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="asccendExist" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:UiElementExists DisplayName="Element Exists - Asccend" Exists="[asccendExist]" sap:VirtualizedContainerService.HintSize="521,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4eec8574-6f96-47f6-bcb9-3b5d46f7d2fa" InformativeScreenshot="4750dd72c9840b69c4e2652da49dc7f8" Selector="&lt;wnd app='explorer.exe' cls='Shell_TrayWnd' idx='*' /&gt;&lt;wnd cls='MSTaskSwWClass' title='Running applications' /&gt;&lt;wnd cls='MSTaskListWClass' title='Running applications' /&gt;&lt;ctrl name='Running applications' role='tool bar' /&gt;&lt;ctrl automationid='{7C5A40EF-A0FB-4BFC-874A-C0F2E0B9FA8E}\IBM\Client Access\Emulato*' idx='2' name='PCSWS.EXE - 1 running window' role='push button' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                    <If Condition="[asccendExist]" sap:VirtualizedContainerService.HintSize="521,494" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,344" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CloseApplication DisplayName="Close Application - Asscend" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                            <ui:CloseApplication.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e8e255f7-cef1-440f-bbd8-bce97bba71ea" InformativeScreenshot="8866312b54b7ce21c28f32d75568ce3a" Selector="&lt;wnd app='pcsws.exe' cls='PCSWS:Main*' title='Session A - [24 x 80]' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:CloseApplication.Target>
                          </ui:CloseApplication>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click - No" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ed8a3528-ff81-4817-928d-1f2c519fb25a" InformativeScreenshot="31d4d77881d0bccb7d0e20a3d1b1e1ef" Selector="&lt;wnd app='pcsws.exe' cls='#32770' title='PC5250' /&gt;&lt;wnd ctrlid='1832' title='&amp;amp;No' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                  <ui:OpenApplication ApplicationWindow="{x:Null}" Arguments="{x:Null}" TimeoutMS="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open Application - Asccend" FileName="C:\Program Files (x86)\IBM\Client Access\Emulator\pcsws.exe" sap:VirtualizedContainerService.HintSize="879,2946" sap2010:WorkflowViewState.IdRef="OpenApplication_2" InformativeScreenshot="dd564c45d1b1bf89a2dd633b81b05a69" Selector="&lt;wnd app='pcsws.exe' cls='PCSWS:Main*' title='Session A - [24 x 80]' /&gt;">
                    <ui:OpenApplication.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="845,2800" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="803,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d836a5d3-1a68-4726-893f-a62bd4b82803" InformativeScreenshot="ff3dde7fde4a3eff138e3a82d185e9ac" Selector="&lt;wnd app='pcsws.exe' cls='#32770' title='Configure PC5250' /&gt;&lt;wnd ctrlid='1' title='OK' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="803,2562" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="761,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Asccend_OpenAsccend.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Assign sap:VirtualizedContainerService.HintSize="761,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[countOutlet]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="761,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="761,378" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[data_outlet]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:Object">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,244" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[not data_outlet(index)(&quot;Nama Outlet&quot;).Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="If_3">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[countOutlet]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[countOutlet+1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                            <Assign sap:VirtualizedContainerService.HintSize="761,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="761,1322" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                              <ui:InterruptibleWhile.Body>
                                <Sequence sap:VirtualizedContainerService.HintSize="725,1155" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[data_request(index)(&quot;jenis_edc&quot;)&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="683,1063" sap2010:WorkflowViewState.IdRef="If_4">
                                    <If.Then>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,914" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Asccend_InputMAPF.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_documents">[data_documents]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_merchant">[data_merchant]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_outlet">[data_outlet(index)]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Asccend_InputMADR.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_madr">[asccend_madr(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_request">[data_request(index)]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Asccend_InputMAPO.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapo">[asccend_mapo(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_madr">[asccend_madr(index)]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Asccend_InputMAMR.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mamr">[asccend_mamr(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_merchant">[data_merchant]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_owner">[data_owner]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_hierarchy_info">[asccend_hierarchy_info(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_review">[asccend_review(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapo">[asccend_mapo(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_outlet">[data_outlet(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_request">[data_request(index)]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Asccend_InputMASA.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mamr">[asccend_mamr(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_masa">[asccend_masa(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_settlement">[asccend_settlement(index)]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="Asccend_InputMACT.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mapf">[asccend_mapf(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_asccend_mamr">[asccend_mamr(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_outlet">[data_outlet(index)]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_data_owner">[data_owner]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                              <ui:InterruptibleWhile.Condition>
                                <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="index&lt;countOutlet" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                              </ui:InterruptibleWhile.Condition>
                            </ui:InterruptibleWhile>
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey - F3" sap:VirtualizedContainerService.HintSize="761,117" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="f3" KeyModifiers="None" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="426706a6-db48-4008-9e2f-2c275da06296">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:SendHotkey>
                            <ui:CloseApplication DisplayName="Close Application - Asccend" sap:VirtualizedContainerService.HintSize="761,106" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
                              <ui:CloseApplication.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7227e79d-61db-4605-aad7-378a69b7f28d" InformativeScreenshot="ee7289272a0e275658c8ea6cbd286545" Selector="&lt;wnd cls='PCSWS:Pres*' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:CloseApplication.Target>
                            </ui:CloseApplication>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:OpenApplication.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:OpenApplication>
                </Sequence>
              </FlowStep>
            </FlowSwitch>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">490,24</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Download-Email-Attachment workflow" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Download-Email-Attachment.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="x:String" x:Key="attachmentPath">[attachment_path]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="imagesPath">[images_path]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
  </Flowchart>
</Activity>