<Activity mc:Ignorable="sap sap2010" x:Class="ReadAsccend" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="R_asccend_mapf" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asccend_mapo" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asscend_review" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asscend_hierarchy_info" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asscend_masa" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asscend_madr" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asscend_mamr" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="R_asscend_settlement" Type="OutArgument(scg:List(scg:Dictionary(x:String, x:String)))" />
    <x:Property Name="attachmentPath" Type="InArgument(x:String)" />
    <x:Property Name="R_automation_condition" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>849,6117</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReadAsccend_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReadAsccend" sap:VirtualizedContainerService.HintSize="859,5872" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="mapfList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="madrList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="mapoList" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;A&quot;, &quot;F&quot;, &quot;K&quot;}]" Name="columnStartList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="mamrList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="hierarchy_infoList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="asccend_reviewList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="masaList" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Default="[New List(of Dictionary(of String, String))]" Name="asccend_settlementList" />
      <Variable x:TypeArguments="x:String" Name="automation_condition" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="817,4788" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[attachmentPath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Reading Asccend Data" sap:VirtualizedContainerService.HintSize="783,4679" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="741,4587" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[columnStartList]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="705,4453" sap2010:WorkflowViewState.IdRef="Sequence_50">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="merchantId" />
                      <Variable x:TypeArguments="x:String" Default="Versi 1" Name="sheetName" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[merchantId]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;103&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="663,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_41" SheetName="[sheetName]">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[merchantId]</OutArgument>
                      </ui:ExcelReadCell.Result>
                    </ui:ExcelReadCell>
                    <If Condition="[merchantId&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="663,4162" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="418,4013" sap2010:WorkflowViewState.IdRef="Sequence_49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Read MAPF" sap:VirtualizedContainerService.HintSize="376,312" sap2010:WorkflowViewState.IdRef="Sequence_3">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="mapf" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;103&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mapf("nama_bank")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;104&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mapf("business_profile")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[mapfList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[mapf]" />
                          </Sequence>
                          <Sequence DisplayName="Read MADR" sap:VirtualizedContainerService.HintSize="376,312" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="madr" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;106&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_6" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[madr("diskon_plan")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;107&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_7" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[madr("deskripsi")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[madrList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[madr]" />
                          </Sequence>
                          <Sequence DisplayName="Read MAPO" sap:VirtualizedContainerService.HintSize="376,411" sap2010:WorkflowViewState.IdRef="Sequence_14">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="mapo" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;109&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_8" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mapo("program_offer")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;110&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_9" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mapo("deskripsi")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;111&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mapo("status")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[mapoList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[mapo]" />
                          </Sequence>
                          <Sequence DisplayName="Read MAMR" sap:VirtualizedContainerService.HintSize="376,1302" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="mamr" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;113&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("merchant_id")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;114&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("mcc_visa")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;115&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("intc_flag_visa")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;116&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_14" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("business_type")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;117&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_15" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("pos_installed")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;118&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_16" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("industrial_code")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;119&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_17" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("statement")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;113&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_42" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("status")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;114&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_18" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("mcc_mcd")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;115&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_19" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("intc_flag_mcd")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;118&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_43" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("reject_unauthorized")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;119&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_44" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[mamr("deposit_advice")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[mamrList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[mamr]" />
                          </Sequence>
                          <Sequence DisplayName="Read Hierarchy Info" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="hierarchy_info" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;121&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_20" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[hierarchy_info("hierarchy_type")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;122&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_21" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[hierarchy_info("number")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;121&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_22" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[hierarchy_info("hierarchy_level")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;122&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_23" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[hierarchy_info("parent_merchant")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[hierarchy_infoList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[hierarchy_info]" />
                          </Sequence>
                          <Sequence DisplayName="Read Review Date" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_28">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="asccend_review" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;124&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_29" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_review("review_date")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[asccend_reviewList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[asccend_review]" />
                          </Sequence>
                          <Sequence DisplayName="Read MASA" sap:VirtualizedContainerService.HintSize="376,68" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="masa" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;126&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_30" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[masa("net_off")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;127&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_31" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[masa("payment_advice_type")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;126&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_32" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[masa("settlement_advice_type")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;127&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_33" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[masa("settlement_defer_days")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[masaList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="[masa]" />
                          </Sequence>
                          <Sequence DisplayName="Read settlement" sap:VirtualizedContainerService.HintSize="376,807" sap2010:WorkflowViewState.IdRef="Sequence_38">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(of String, String)]" Name="asccend_settlement" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;129&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_34" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("day")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;130&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_35" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("currency")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) +1) + &quot;131&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_36" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("bank")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 1) + &quot;132&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_37" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("ac_name")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;129&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_38" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("method")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;130&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_39" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("statement_day")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <ui:ExcelReadCell Cell="[Chr(Asc(column) + 3) + &quot;131&quot;]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_40" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[asccend_settlement("account")]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <AddToCollection x:TypeArguments="scg:Dictionary(x:String, x:String)" Collection="[asccend_settlementList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8" Item="[asccend_settlement]" />
                          </Sequence>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,253" sap2010:WorkflowViewState.IdRef="Sequence_51">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadCell Cell="D2" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_45" SheetName="[sheetName]">
                              <ui:ExcelReadCell.Result>
                                <OutArgument x:TypeArguments="x:String">[automation_condition]</OutArgument>
                              </ui:ExcelReadCell.Result>
                            </ui:ExcelReadCell>
                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[automation_condition]" />
                          </Sequence>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Sequence DisplayName="Assign Variable to Arguments" sap:VirtualizedContainerService.HintSize="817,952" sap2010:WorkflowViewState.IdRef="Sequence_39">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign MAPF" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asccend_mapf]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[mapfList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign MAPO" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_50">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asccend_mapo]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[mapoList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign review" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_51">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asscend_review]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[asccend_reviewList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Hierarchy Info" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asscend_hierarchy_info]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[hierarchy_infoList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign MASA" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asscend_masa]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[masaList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign MADR" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asscend_madr]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[madrList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign MAMR" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asscend_mamr]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[mamrList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Settlement" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[R_asscend_settlement]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[asccend_settlementList]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[R_automation_condition]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[automation_condition]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
  </Sequence>
</Activity>